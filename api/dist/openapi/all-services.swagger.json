{
  "swagger": "2.0",
  "info": {
    "title": "all-services.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "TodosService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/todos": {
      "get": {
        "summary": "The List method takes zero or more parameters as input, and returns a todos.ItemCollection of todos.ItemEntity that match the input parameters.",
        "operationId": "TodosService_ListTodos",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/todosItemEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TodosService"
        ]
      },
      "post": {
        "summary": "Adds a new ToDos item to the ToDos list",
        "operationId": "TodosService_CreateTodo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/todosItemEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Body with todos.Item",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/todosItem"
            }
          }
        ],
        "tags": [
          "TodosService"
        ]
      }
    },
    "/todos/{tdi}": {
      "get": {
        "summary": "The Get method takes zero or more parameters, and returns a todos.ItemEntity which contains a todos.Item",
        "operationId": "TodosService_GetTodo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/todosItemEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tdi",
            "description": "The query param **tdi** stands for the item id.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "TodosService"
        ]
      },
      "patch": {
        "summary": "The Get method takes zero or more parameters, and returns a todos.ItemEntity which contains a todos.Item",
        "operationId": "TodosService_UpdateTodo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/todosItemEntity"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "tdi",
            "description": "The query param **tdi** stands for the item id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Body with todos.Item",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/todosItem"
            }
          }
        ],
        "tags": [
          "TodosService"
        ]
      }
    }
  },
  "definitions": {
    "furoFieldConstraint": {
      "type": "object",
      "properties": {
        "is": {
          "type": "string",
          "title": "the constraint value as string, even it is a number"
        },
        "message": {
          "type": "string",
          "title": "The message to display on constraint violation"
        }
      },
      "title": "a single fieldconstraint"
    },
    "furoFieldMeta": {
      "type": "object",
      "properties": {
        "default": {
          "type": "string",
          "title": "The default value as JSON string, this must match with the data structure of your type"
        },
        "placeholder": {
          "type": "string",
          "title": "Informative text which can be displayed on the ui"
        },
        "hint": {
          "type": "string",
          "title": "A hint"
        },
        "label": {
          "type": "string",
          "title": "Informative text which can be displayed on the ui"
        },
        "options": {
          "$ref": "#/definitions/furoFieldoption",
          "title": "Fieldoptions"
        },
        "readonly": {
          "type": "boolean",
          "description": "Marks the field as readonly. Used for validations."
        },
        "repeated": {
          "type": "boolean",
          "title": "repeated"
        },
        "typespecific": {
          "$ref": "#/definitions/protobufAny",
          "title": "Put in type specific metas for your fields here"
        }
      },
      "title": "Metas for a field"
    },
    "furoFieldoption": {
      "type": "object",
      "properties": {
        "flags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Add flags for your field. This can be something like \"searchable\". \n//The flags can be used by generators, ui components,..."
        },
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          },
          "title": "a list with options, use furo.optionitem or your own"
        }
      },
      "title": "Metas for a field"
    },
    "furoLink": {
      "type": "object",
      "properties": {
        "rel": {
          "type": "string",
          "description": "the relationship like self..."
        },
        "method": {
          "type": "string",
          "title": "method of curl v1.0.0"
        },
        "href": {
          "type": "string",
          "title": "link"
        },
        "type": {
          "type": "string",
          "title": "mime type"
        },
        "service": {
          "type": "string",
          "title": "name of the service which can handle this link"
        }
      },
      "title": "link"
    },
    "furoMeta": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/furoMetaField"
          },
          "title": "fields of meta info"
        }
      },
      "title": "meta info"
    },
    "furoMetaField": {
      "type": "object",
      "properties": {
        "meta": {
          "$ref": "#/definitions/furoFieldMeta",
          "title": "meta informatioxn of a field"
        },
        "constraints": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/furoFieldConstraint"
          },
          "title": "constraints for a field"
        }
      },
      "title": "fields of meta info"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\n protocol buffer message. This string must contain at least\n one \"/\" character. The last segment of the URL's path must represent\n the fully qualified name of the type (as in\n `path/google.protobuf.Duration`). The name should be in a canonical form\n (e.g., leading \".\" is not accepted).\n\n In practice, teams usually precompile into the binary all types that they\n expect it to use in the context of Any. However, for URLs which use the\n scheme `http`, `https`, or no scheme, one can optionally set up a type\n server that maps type URLs to message definitions as follows:\n\n * If no scheme is provided, `https` is assumed.\n * An HTTP GET on the URL must yield a [google.protobuf.Type][]\n   value in binary format, or produce an error.\n * Applications are allowed to cache lookup results based on the\n   URL, or have them precompiled into a binary to avoid any\n   lookup. Therefore, binary compatibility needs to be preserved\n   on changes to types. (Use versioned type names to manage\n   breaking changes.)\n\n Note: this functionality is not currently available in the official\n protobuf release, and it is not used for type URLs beginning with\n type.googleapis.com.\n\n Schemes other than `http`, `https` (or the empty scheme) might be\n used with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\n URL that describes the type of the serialized message.\n\n Protobuf library provides support to pack/unpack Any values in the form\n of utility functions or additional generated methods of the Any type.\n\n Example 1: Pack and unpack a message in C\u0026#43;\u0026#43;.\n\n     Foo foo = ...;\n     Any any;\n     any.PackFrom(foo);\n     ...\n     if (any.UnpackTo(\u0026amp;foo)) {\n       ...\n     }\n\n Example 2: Pack and unpack a message in Java.\n\n     Foo foo = ...;\n     Any any = Any.pack(foo);\n     ...\n     if (any.is(Foo.class)) {\n       foo = any.unpack(Foo.class);\n     }\n\n  Example 3: Pack and unpack a message in Python.\n\n     foo = Foo(...)\n     any = Any()\n     any.Pack(foo)\n     ...\n     if any.Is(Foo.DESCRIPTOR):\n       any.Unpack(foo)\n       ...\n\n  Example 4: Pack and unpack a message in Go\n\n      foo := \u0026amp;pb.Foo{...}\n      any, err := anypb.New(foo)\n      if err != nil {\n        ...\n      }\n      ...\n      foo := \u0026amp;pb.Foo{}\n      if err := any.UnmarshalTo(foo); err != nil {\n        ...\n      }\n\n The pack methods provided by protobuf library will by default use\n \u0026#39;type.googleapis.com/full.type.name\u0026#39; as the type URL and the unpack\n methods only use the fully qualified type name after the last \u0026#39;/\u0026#39;\n in the type URL, for example \u0026#34;foo.bar.com/x/y.z\u0026#34; will yield type\n name \u0026#34;y.z\u0026#34;.\n\n\n JSON\n ====\n The JSON representation of an `Any` value uses the regular\n representation of the deserialized, embedded message, with an\n additional field `@type` which contains the type URL. Example:\n\n     package google.profile;\n     message Person {\n       string first_name = 1;\n       string last_name = 2;\n     }\n\n     {\n       \u0026#34;@type\u0026#34;: \u0026#34;type.googleapis.com/google.profile.Person\u0026#34;,\n       \u0026#34;firstName\u0026#34;: \u0026lt;string\u0026gt;,\n       \u0026#34;lastName\u0026#34;: \u0026lt;string\u0026gt;\n     }\n\n If the embedded message type is well-known and has a custom JSON\n representation, that representation will be embedded adding a field\n `value` which holds the custom JSON in addition to the `@type`\n field. Example (for message [google.protobuf.Duration][]):\n\n     {\n       \u0026#34;@type\u0026#34;: \u0026#34;type.googleapis.com/google.protobuf.Duration\u0026#34;,\n       \u0026#34;value\u0026#34;: \u0026#34;1.212s\u0026#34;\n     }"
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "todosItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Identity of the item"
        },
        "description": {
          "type": "string",
          "title": "Description of the task"
        },
        "due_date": {
          "$ref": "#/definitions/typeDate",
          "title": "Due date of the task"
        }
      },
      "title": "Simple ToDos Item Type"
    },
    "todosItemEntity": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/todosItem",
          "title": "the data contains a todos.Item"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/furoLink"
          },
          "title": "the Hateoas links"
        },
        "meta": {
          "$ref": "#/definitions/furoMeta",
          "title": "Meta for the response"
        }
      },
      "title": "Entitycontainer which holds a todos.Item"
    },
    "typeDate": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\n a year."
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of year. Must be from 1 to 12."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\n if specifying a year/month where the day is not significant."
        }
      },
      "description": "Represents a whole calendar date, e.g. date of birth. The time of day and\n time zone are either specified elsewhere or are not significant. The date\n is relative to the Proleptic Gregorian Calendar. The day may be 0 to\n represent a year and month where the day is not significant, e.g. credit card\n expiration date. The year may be 0 to represent a month and day independent\n of year, e.g. anniversary date. Related types are [google.type.TimeOfDay][google.type.TimeOfDay]\n and `google.protobuf.Timestamp`."
    }
  }
}
